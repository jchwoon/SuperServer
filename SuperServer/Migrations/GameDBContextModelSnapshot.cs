// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperServer.DB;

#nullable disable

namespace SuperServer.Migrations
{
    [DbContext(typeof(GameDBContext))]
    partial class GameDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SuperServer.DB.Hero", b =>
                {
                    b.Property<int>("HeroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HeroId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("HeroName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.HasKey("HeroId");

                    b.HasIndex("HeroName")
                        .IsUnique()
                        .HasFilter("[HeroName] IS NOT NULL");

                    b.ToTable("Hero");
                });

            modelBuilder.Entity("SuperServer.DB.Hero", b =>
                {
                    b.OwnsOne("SuperServer.DB.Stats", "HeroStat", b1 =>
                        {
                            b1.Property<int>("HeroId")
                                .HasColumnType("int");

                            b1.Property<float>("AtkSpeed")
                                .HasColumnType("real");

                            b1.Property<float>("AttackDamage")
                                .HasColumnType("real");

                            b1.Property<float>("Defense")
                                .HasColumnType("real");

                            b1.Property<float>("Exp")
                                .HasColumnType("real");

                            b1.Property<float>("HP")
                                .HasColumnType("real");

                            b1.Property<float>("MP")
                                .HasColumnType("real");

                            b1.Property<float>("MaxHp")
                                .HasColumnType("real");

                            b1.Property<float>("MaxMp")
                                .HasColumnType("real");

                            b1.Property<float>("MoveSpeed")
                                .HasColumnType("real");

                            b1.HasKey("HeroId");

                            b1.ToTable("Hero");

                            b1.WithOwner()
                                .HasForeignKey("HeroId");
                        });

                    b.Navigation("HeroStat");
                });
#pragma warning restore 612, 618
        }
    }
}
