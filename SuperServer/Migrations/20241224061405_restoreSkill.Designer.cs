// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperServer.DB;

#nullable disable

namespace SuperServer.Migrations
{
    [DbContext(typeof(GameDBContext))]
    [Migration("20241224061405_restoreSkill")]
    partial class restoreSkill
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SuperServer.DB.DBHero", b =>
                {
                    b.Property<int>("DBHeroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DBHeroId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("Class")
                        .HasColumnType("int");

                    b.Property<int>("ConsumableSlotCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ETCSlotCount")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentSlotCount")
                        .HasColumnType("int");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<string>("HeroName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<float>("PosX")
                        .HasColumnType("real");

                    b.Property<float>("PosY")
                        .HasColumnType("real");

                    b.Property<float>("PosZ")
                        .HasColumnType("real");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<float>("RotY")
                        .HasColumnType("real");

                    b.Property<string>("Skills")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DBHeroId");

                    b.HasIndex("HeroName")
                        .IsUnique()
                        .HasFilter("[HeroName] IS NOT NULL");

                    b.ToTable("Hero");
                });

            modelBuilder.Entity("SuperServer.DB.DBItem", b =>
                {
                    b.Property<long>("DBItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("ItemTemplateId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerDbId")
                        .HasColumnType("int");

                    b.Property<int>("SlotType")
                        .HasColumnType("int");

                    b.HasKey("DBItemId");

                    b.HasIndex("OwnerDbId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("SuperServer.DB.DBHero", b =>
                {
                    b.OwnsOne("SuperServer.DB.Stats", "HeroStat", b1 =>
                        {
                            b1.Property<int>("DBHeroId")
                                .HasColumnType("int");

                            b1.Property<int>("AddAtkSpeedMultiplier")
                                .HasColumnType("int");

                            b1.Property<int>("AtkDamage")
                                .HasColumnType("int");

                            b1.Property<float>("AtkSpeed")
                                .HasColumnType("real");

                            b1.Property<int>("Defence")
                                .HasColumnType("int");

                            b1.Property<int>("HP")
                                .HasColumnType("int");

                            b1.Property<int>("MP")
                                .HasColumnType("int");

                            b1.Property<int>("MaxHp")
                                .HasColumnType("int");

                            b1.Property<int>("MaxMp")
                                .HasColumnType("int");

                            b1.Property<float>("MoveSpeed")
                                .HasColumnType("real");

                            b1.HasKey("DBHeroId");

                            b1.ToTable("Hero");

                            b1.WithOwner()
                                .HasForeignKey("DBHeroId");
                        });

                    b.Navigation("HeroStat");
                });

            modelBuilder.Entity("SuperServer.DB.DBItem", b =>
                {
                    b.HasOne("SuperServer.DB.DBHero", "OwnerDb")
                        .WithMany("Items")
                        .HasForeignKey("OwnerDbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OwnerDb");
                });

            modelBuilder.Entity("SuperServer.DB.DBHero", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
